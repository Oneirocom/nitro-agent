version: "3"
services:
  app:
    build: .
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=production
      - DATABASE_URL=${DATABASE_URL}
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
    depends_on:
      - db
    command: >
      bash -c '
        until pg_isready -h db -p 5432; do
          echo "Waiting for PostgreSQL to become available..."
          sleep 1
        done
        echo "PostgreSQL is available"
        echo "Running first init script..."
        npm run init
        echo "Copying Prisma files..."
        mkdir -p .output/server/node_modules/@magickml/server-db/src/lib/prisma/client-core/
        find ./node_modules/@magickml/server-db/src/lib/prisma/client-core/ -type f \( -name "libquery_engine-*" -o -name "schema.prisma" \) -exec cp {} .output/server/node_modules/@magickml/server-db/src/lib/prisma/client-core/ \;
        echo "Prisma client-core directory contents:"
        ls -la .output/server/node_modules/@magickml/server-db/src/lib/prisma/client-core/
        echo "Running second init script..."
        npm run init
        echo "Starting application..."
        npm start
      '
    env_file:
      - .env
  redis:
    image: redis:latest
    restart: always
    ports:
      - "6379:6379"
  db:
    restart: always
    image: ankane/pgvector:v0.4.1
    hostname: magick_db
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      DATABASE_URL: ${DATABASE_URL}
    ports:
      - "5433:5432"
    volumes:
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
